import streamlit as st
from PIL import Image
from torchvision import models
import torchvision.transforms as transforms
import torch


SPECIES_IDX = ['1',
               '10',
               '100',
               '101',
               '102',
               '103',
               '104',
               '105',
               '106',
               '107',
               '108',
               '11',
               '112',
               '113',
               '114',
               '115',
               '116',
               '117',
               '118',
               '119',
               '12',
               '120',
               '121',
               '122',
               '125',
               '127',
               '13',
               '131',
               '138',
               '142',
               '149',
               '15',
               '150',
               '156',
               '160',
               '163',
               '165',
               '166',
               '17',
               '170',
               '18',
               '182',
               '183',
               '2',
               '21',
               '23',
               '25',
               '27',
               '32',
               '38',
               '43',
               '44',
               '45',
               '46',
               '48',
               '5',
               '54',
               '55',
               '57',
               '58',
               '6',
               '63',
               '7',
               '71',
               '73',
               '74',
               '75',
               '80',
               '81',
               '83',
               '84',
               '85',
               '92',
               '93',
               '94']

SPECIES = [
    ["Albizia adinocephala"],
    ["Cedrela odorata"],
    ["Cordia alliodora"],
    ["Handroanthus ochraceus"],
    ["Enterolobium cyclocarpum"],
    ["Albizia niopoides"],
    ["Diphysa americana"],
    ["Pseudosamanea guachapele"],
    ["Hymenaea courbaril"],
    ["Spondias mombin"],
    ["Licania arborea"],
    ["Lonchocarpus filipei"],
    ["Luehea speciosa"],
    ["Maclura tinctoria"],
    ["Calycophyllum  candidissimum"],
    ["Manilkara sapota"],
    ["Pochota  fendleri "],
    ["Samanea saman"],
    ["Sapium allenii"],
    ["Pachira aquatica"],
    ["Schizolobium paraibuna"],
    ["Quararibea asterolepis"],
    ["Tabebuia rosea"],
    ["Heisteria concinna"],
    ["Sapium glandulosum"],
    ["Bravaisia integerrima"],
    ["Brosimum alicastrum"],
    ["Bursera simaruba"],
    ["Pouteria reticulata"],
    ["Cassia grandis"],
    ["Trichilia pleeana"],
    ["Triplaris melaenodendron"],
    ["Pseudobombax septenatum"],
    ["Luehea seemannii"],
    ["Ceiba pentandra"],
    ["Sideroxylon capiri"],
    ["Nectandra lineata"],
    ["Machaerium bilovulatum"],
    ["Pouteria sp."],
    ["Abarema macradenia"],
    ["Anacardium excelsum"],
    ["Aspidosperma myristicifolium"],
    ["Brosimum utile"],
    ["Calophyllum mesoamericanum"],
    ["Carapa guianensis"],
    ["Caryocar costaricense"],
    ["Couma macrocarpa"],
    ["Couratari guianensis"],
    ["Dendropanax arboreus"],
    ["Dussia sp A."],
    ["Gliricidia sepium"],
    ["Grias cauliflora"],
    ["Huberodendron allenii"],
    ["Humiriastrum diguense"],
    ["Hieronyma alchorneoides"],
    ["Inga alba"],
    ["Jacaranda copaia"],
    ["Lacmellea panamensis"],
    ["Manilkara staminodella"],
    ["Otoba novogranatensis"],
    ["Oxandra venezuelana"],
    ["Parkia pendula"],
    ["Peltogyne purpurea"],
    ["Platymiscium curuense"],
    ["Poulsenia armata"],
    ["Pouteria laevigata"],
    ["Pouteria torta"],
    ["Protium sp."],
    ["Pseudopiptadenia suaveolens"],
    ["Pterocarpus sp."],
    ["Qualea sp."],
    ["Ruptiliocarpon caracolito"],
    ["Dalbergia retusa"],
    ["Symphonia globulifera"],
    ["Tapirira guianensis"],
    ["Terminalia amazonia"],
    ["Terminalia bucidoides"],
    ["Trattinnickia aspera"],
    ["Vantanea barbourii"],
    ["Virola koschnyi"],
    ["Virola sebifera"],
    ["Vitex cooperi"],
    ["Vochysia ferruginea"],
    ["Vochysia gentryi"],
    ["Zanthoxylum ekmanii"],
    ["Zanthoxylum limoncello"],
    ["Lecointea amazonica"],
    ["Brosimum costaricanum "],
    ["Hymenaea osanigraseminae"],
    ["Naucleopsis capirensis"],
    ["Dussia foxii"],
    ["Aspidosperma crypticum"],
    ["Astronium graveolens "],
    ["Pseudolmedia spuria"],
    ["Sloanea obtusifolia"],
    ["Ormosia subsimplex "],
    ["Virola surinamensis "],
    ["Brosimum guianensis"],
    ["Pouteria filipes "],
    ["Brosimum lactescens"],
    ["Garcinia madruno "],
    ["Dialium guianense"],
    ["Platymiscium parviflorum"],
    ["Calophyllum brasiliense"],
    ["Ochroma pyramidale"],
    ["Stryphnodendron  microstachyum "],
    ["Simarouba amara"],
    ["Xylopia sericophylla "],
    ["Anthodiscus chocoensis "],
    ["Couratari scottmorii "],
    ["Inga sp."],
    ["Tachigali versicolor "],
    ["Hampea appendiculata "],
    ["Vochysia guatemalensis"],
    ["Clethra costaricensis "],
    ["Pourouma bicolor "],
    ["Ilex skutchii "],
    ["Inga oerstesiana "],
    ["Myrsine  pellucidopunctata"],
    ["Nectandra membranacea"],
    ["Inga chocoensis "],
    ["Lonchocarpus macrophyllum "],
    ["Ocotea viridiflora "],
    ["Mortoniodendron costaricense "],
    ["Pentaclethra macroloba"],
    ["Prioria copaifera"],
    ["Chloroleucon sp."],
    ["Elaeoluma glabrescens"],
    ["Minquartia guianensis"],
    ["Chaunochiton kappleri"],
    ["Prioria sp. nov. "],
    ["Eschweilera panamensis"],
    ["Pradosia sp. "],
    ["Terminalia costaricensis"],
    ["Tachigali costaricensis"],
    ["Magnolia gloriensis "],
    ["Cespedesia spathulata "],
    ["Ocotea floribunda "],
    ["Bourreria costaricensis"],
    ["Staphylea occidentalis "],
    ["Protium ravenii "],
    ["Apeiba membranacea"],
    ["Maranthes panamensis "],
    ["Drypetes brownii "],
    ["Cordia megalantha "],
    ["Zanthoxylum panamense "],
    ["Trichospermum galeottii "],
    ["Parathesis trichogyne "],
    ["Laetia procera"],
    ["Goethalsia meiantha"],
    ["Guatteria lucens"],
    ["Pterocarpus officinalis"],
    ["Erythrina fusca"],
    ["Cochlospermum vitifolium"],
    ["Lonchocarpus rugosus"],
    ["Rehdera trinervis"],
    ["Lonchocarpus minimiflorus"],
    ["Ateleia herbert-smithii"],
    ["Swietenia macrophylla"],
    ["Sterculia apetala"],
    ["Aralia excelsa"],
    ["PoincianellaÂ eriostachys"],
    ["Mangifera indica"],
    ["Godmania aesculifolia"],
    ["Handroanthus impetiginosus"],
    ["Quercus oleoides"],
    ["Manilkara chicle"],
    ["Cordia gerascanthus"],
    ["Caesalpinia coriaria"],
    ["Genipa americana"],
    ["Bursera tomentosa"],
    ["Terminalia oblonga"],
    ["Dilodendron costaricense"],
    ["Andira inermis"],
    ["Zuelania guidonea"],
    ["Thouinidium decandrum"],
    ["Diospyros nigra"],
    ["Erblichia odorata"],
    ["Ziziphus guatemalensis"],
    ["Avicennia germinans"],
    ["Tamarindus indica"],
    ["Lysiloma auritum"],
    ["Tapirira mexicana"],
    ["Daphnopsis seibertii"],
    ["Croton megistocarpus"],
    ["Daphnopsis sp."],
    ["Pouteria jorvana"],
    ["Inga exalata"]
]


def densenet121_model(pretrained=True):
    # Returns Defined Densenet model with weights trained on ImageNet
    model = models.densenet121(pretrained=pretrained)
    # Get the number of features output from CNN layer
    num_ftrs = model.classifier.in_features
    # Overwrites the Classifier layer with custom defined layer for transfer learning
    model.classifier = torch.nn.Linear(num_ftrs, 75)
    return model


model = densenet121_model(pretrained=True)
model.load_state_dict(torch.load("densenet121.pth", map_location="cpu"))
model.eval()

# Designing the interface
st.image(Image.open('logo_tec.jpg').convert('RGB'), use_column_width=True)
st.title("BarkNet")
st.subheader('Trees of Costa Rica Classification App')
st.image(Image.open('BG.jpeg').convert('RGB'), use_column_width=True)
# For newline
st.write('\n')

file_up = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])


if file_up is not None:
    image = Image.open(file_up)
    st.image(image, caption='Uploaded Image.', use_column_width=True)

    data_transforms = transforms.Compose([
        transforms.Resize(256),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])])

    batch_t = torch.unsqueeze(data_transforms(image.convert('RGB')), 0)

if st.button("Click Here to Predict"):
    if file_up is None:
        st.write("Please upload an Image to Classify")
    else:
        with st.spinner('Wait ...'):
            out = model(batch_t)
            prob = torch.nn.functional.softmax(out, dim=1)[0] * 100
            _, indices = torch.sort(out, descending=True)
            st.subheader('Prediction for each classifier')

            for idx in indices[0][:3]:
                species_id = int(SPECIES_IDX[idx.item()]) - 1
                st.write(SPECIES[species_id][0], ' : ',
                         round(prob[idx].item()), '%')
